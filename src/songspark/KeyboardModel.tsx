/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { Suspense } from 'react'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Base: THREE.Mesh
    WhiteKeys: THREE.Mesh
    BlackKeys: THREE.Mesh
  }
  materials: {
    Base: THREE.MeshStandardMaterial
    WhiteKey: THREE.MeshStandardMaterial
    BlackKey: THREE.MeshStandardMaterial
  }
}

export function KeyboardModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/keyboard.glb') as GLTFResult
  return (
    <Suspense fallback={null}>
      <group {...props} dispose={null}>
        <mesh geometry={nodes.Base.geometry} material={materials.Base} />
        <mesh geometry={nodes.WhiteKeys.geometry} material={materials.WhiteKey} />
        <mesh geometry={nodes.BlackKeys.geometry} material={materials.BlackKey} />
      </group>
    </Suspense>
  )
}

useGLTF.preload('/keyboard.glb')
