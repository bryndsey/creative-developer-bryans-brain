/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 brain-tank.glb -t
*/

import * as THREE from 'three'
import React, { forwardRef, useRef } from 'react'
import { MeshTransmissionMaterial, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Group } from 'three'

type GLTFResult = GLTF & {
  nodes: {
    Tank: THREE.Mesh
    Base: THREE.Mesh
    Top: THREE.Mesh
    Brain: THREE.Mesh
  }
  materials: {
    Glass: THREE.MeshStandardMaterial
    Metal: THREE.MeshStandardMaterial
    Brain: THREE.MeshStandardMaterial
  }
}

const background = new THREE.Color('white')

export const BrainTank = forwardRef<Group, JSX.IntrinsicElements['group']>((props, ref) => {
  const { nodes, materials } = useGLTF('/brain-tank.glb') as GLTFResult
  return (
    <group {...props} ref={ref} dispose={null}>
      <mesh geometry={nodes.Tank.geometry}>
        <MeshTransmissionMaterial
          distortionScale={1}
          distortion={0.25}
          temporalDistortion={0.1}
          thickness={0.2}
          backside
          background={background}
          // roughness={0.1}
        />
      </mesh>
      <mesh geometry={nodes.Base.geometry} material={materials.Metal} />
      <mesh geometry={nodes.Top.geometry} material={materials.Metal} />
      <mesh geometry={nodes.Brain.geometry} material={materials.Brain} />
    </group>
  )
})
BrainTank.displayName = 'BrainTank'

useGLTF.preload('/brain-tank.glb')
